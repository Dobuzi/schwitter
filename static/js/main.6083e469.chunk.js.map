{"version":3,"sources":["fbase.js","components/AuthForm.js","components/SocialAuthForm.js","routes/Auth.js","components/Pang.js","components/PangFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","newAccount","setNewAccount","useState","email","setEmail","password","setPassword","passwordCheck","setPasswordCheck","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","SocialAuthForm","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","FacebookAuthProvider","signInWithPopup","icon","faGoogle","size","color","faFacebook","faGithub","Auth","window","location","reload","faFire","Pang","pangObj","isAuthor","editing","setEditing","text","newPang","setNewPang","onDeleteClick","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","style","backgroundColor","autoFocus","src","alt","faTrash","faPencilAlt","PangFactory","userObj","pang","setPang","attachment","setAttachment","attachmentLocation","uid","uuidv4","attachmentRef","ref","child","putString","response","getDownloadURL","expiredAt","Date","now","author","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","backgroundImage","faEraser","Home","pangs","setPangs","useEffect","where","orderBy","onSnapshot","snapshot","pangArray","docs","map","data","key","Navigation","to","faUser","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyPangs","get","myPangs","updateProfile","faEdit","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6083e469.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nimport \"../style/authForm.css\";\n\nconst AuthForm = ({ newAccount, setNewAccount }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        } else if (name === \"passwordCheck\") {\n            setPasswordCheck(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if (newAccount) {\n                if (password === passwordCheck) {\n                    await authService.createUserWithEmailAndPassword(\n                        email,\n                        password\n                    );\n                } else {\n                    setError(\"The passwords are not the same.\");\n                }\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                {newAccount && (<input\n                    name=\"passwordCheck\"\n                    type=\"password\"\n                    placeholder=\"Repeat password\"\n                    required\n                    value={passwordCheck}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />)}\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                    className=\"authInput authSubmit\"\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import { faFacebook, faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nimport \"../style/socialAuthForm.css\";\n\nconst SocialAuthForm = ({ newAccount }) => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        } else if (name === \"facebook\") {\n            provider = new firebaseInstance.auth.FacebookAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <>\n            {!newAccount && (<div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGoogle} size=\"2x\" color=\"#4885ed\" />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"facebook\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faFacebook} size=\"2x\" color=\"#3b5998\" />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                </button>\n\n            </div>)}\n        </>\n    );\n};\n\nexport default SocialAuthForm;\n","import React, { useState } from \"react\";\n\nimport AuthForm from \"../components/AuthForm\";\nimport SocialAuthForm from \"components/SocialAuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFire } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../style/auth.css\";\n\nconst Auth = () => {\n    const [newAccount, setNewAccount] = useState(false);\n    const onClick = () => {\n        window.location.reload();\n    }\n    return (\n        <div className=\"authContainer\">\n            <span onClick={onClick} className=\"auth__logo\">\n                <FontAwesomeIcon\n                    icon={faFire}\n                    color=\"#a29bfe\"\n                    size=\"2x\"\n                />\n            pang!</span>\n            <AuthForm newAccount={newAccount} setNewAccount={setNewAccount} />\n            <SocialAuthForm newAccount={newAccount} />\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../style/pang.css\";\n\nconst Pang = ({ pangObj, isAuthor }) => {\n    const [editing, setEditing] = useState(false);\n    const [newPang, setNewPang] = useState(pangObj.text);\n    const onDeleteClick = async () => {\n        await dbService.doc(`pangs/${pangObj.id}`).delete();\n        await storageService.refFromURL(pangObj.attachmentURL).delete();\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`pangs/${pangObj.id}`).update({\n            text: newPang,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewPang(value);\n    };\n    return (\n        <div\n            style={isAuthor ? { backgroundColor: \"#a29bfe\", color: \"whitesmoke\" } : {}}\n            className=\"pang\"\n        >\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container pangEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your pang\"\n                            value={newPang}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                    <>\n                        <h4 style={isAuthor ? { color: \"whitesmoke\" } : {}}>\n                            {pangObj.text}\n                        </h4>\n                        {pangObj.attachmentURL && (\n                            <img src={pangObj.attachmentURL} alt=\"pang img\" />\n                        )}\n                        {isAuthor && (\n                            <div className=\"pang__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n                        )}\n                    </>\n                )}\n        </div>\n    );\n};\n\nexport default Pang;\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEraser, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../style/factory.css\";\n\nconst PangFactory = ({ userObj }) => {\n    const [pang, setPang] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const t_limit = 8000;\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (pang === \"\") {\n            return;\n        }\n        let attachmentURL = \"\";\n        let attachmentLocation = \"\";\n        if (attachment) {\n            attachmentLocation = `${userObj.uid}/${uuidv4()}`;\n            const attachmentRef = storageService\n                .ref()\n                .child(attachmentLocation);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentURL = await response.ref.getDownloadURL();\n        }\n        const pangObj = {\n            text: pang,\n            expiredAt: Date.now() + t_limit,\n            author: userObj.uid,\n            attachmentURL,\n            attachmentLocation,\n        };\n        await dbService.collection(\"pangs\").add(pangObj);\n        setPang(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setPang(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                target: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearClick = () => setAttachment(\"\");\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n                <div className=\"factoryInput__container\">\n                    <input\n                        value={pang}\n                        onChange={onChange}\n                        type=\"text\"\n                        placeholder=\"What's on your mind?\"\n                        maxLength={120}\n                        className=\"factoryInput__input\"\n                    />\n                    <input\n                        type=\"submit\"\n                        value=\"&darr;\"\n                        className=\"factoryInput__arrow\"\n                    />\n                </div>\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n                <input\n                    id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    className=\"factoryInput__input__image\"\n                />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            alt=\"profile\"\n                            style={{ backgroundImage: attachment }}\n                        />\n                        <button\n                            onClick={onClearClick}\n                            className=\"factoryForm__clear\"\n                        >\n                            <span>Clear</span>\n                            <FontAwesomeIcon icon={faEraser} />\n                        </button>\n                    </div>\n                )}\n            </form>\n        </>\n    );\n};\n\nexport default PangFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\n\nimport Pang from \"../components/Pang\";\nimport PangFactory from \"../components/PangFactory\";\n\nimport \"../style/home.css\";\n\nconst Home = ({ userObj }) => {\n    const [pangs, setPangs] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection(\"pangs\")\n            .where(\"expiredAt\", \">\", Date.now())\n            .orderBy(\"expiredAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const pangArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setPangs(pangArray);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <PangFactory userObj={userObj} />\n            <div className=\"home__pangs\">\n                {pangs.map((pang) => (\n                    <Pang\n                        key={pang.id}\n                        pangObj={pang}\n                        isAuthor={pang.author === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFire, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"../style/nav.css\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul className=\"nav-ul\">\n                <li>\n                    <Link to=\"/\" className=\"linkHome\">\n                        <span className=\"nav__logo\"><FontAwesomeIcon\n                            icon={faFire}\n                            color={\"#a29bfe\"}\n                            size=\"2x\"\n                        />pAAng!</span>\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\" className=\"linkProfile\">\n                        <FontAwesomeIcon\n                            icon={faUser}\n                            color={\"#ffeaa7\"}\n                            size=\"2x\"\n                        />\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbase\";\n\nimport \"../style/profile.css\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyPangs = async () => {\n        const myPangs = await dbService\n            .collection(\"pangs\")\n            .where(\"author\", \"==\", userObj.uid)\n            .orderBy(\"expiredAt\", \"desc\")\n            .get();\n        return myPangs;\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n\n    useEffect(() => {\n        getMyPangs();\n    });\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display Name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <span\n                    type=\"submit\"\n                    className=\"formBtn\"\n                ><FontAwesomeIcon icon={faEdit} /></span>\n            </form>\n            <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\n                Sign Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nimport \"../style/router.css\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <div className=\"router__container\">\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Loading...\"\n            )}\n            <footer>&copy; {new Date().getFullYear()} Pang!</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./style/base.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}