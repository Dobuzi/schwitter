{"version":3,"sources":["fbase.js","components/AuthForm.js","components/SocialAuthForm.js","routes/Auth.js","components/Pang.js","components/PangFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","SocialAuthForm","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faGoogle","faGithub","Auth","faTwitter","color","size","Pang","pangObj","isAuthor","editing","setEditing","text","newPang","setNewPang","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentURL","toggleEditing","update","style","backgroundColor","autoFocus","src","alt","faTrash","faPencilAlt","PangFactory","userObj","pang","setPang","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","author","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","backgroundImage","faTimes","Home","pangs","setPangs","useEffect","onSnapshot","snapshot","pangArray","docs","map","data","sort","b","key","Navigation","to","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyPangs","where","orderBy","get","myPangs","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4cbf7b6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"../fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(\"false\");\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if (newAccount) {\n                await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\n                    className=\"authInput authSubmit\"\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst SocialAuthForm = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <>\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    Sign in with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    Sign in with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </>\n    );\n};\n\nexport default SocialAuthForm;\n","import React from \"react\";\nimport AuthForm from \"../components/AuthForm\";\nimport SocialAuthForm from \"components/SocialAuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                className=\"auth__icon\"\n            />\n            <AuthForm />\n            <SocialAuthForm />\n        </div>\n    );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Pang = ({ pangObj, isAuthor }) => {\n    const [editing, setEditing] = useState(false);\n    const [newPang, setNewPang] = useState(pangObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this pang?\");\n        if (ok) {\n            await dbService.doc(`pangs/${pangObj.id}`).delete();\n            await storageService.refFromURL(pangObj.attachmentURL).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`pangs/${pangObj.id}`).update({\n            text: newPang,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewPang(value);\n    };\n    return (\n        <div\n            style={isAuthor ? { backgroundColor: \"#55efc4\" } : {}}\n            className=\"pang\"\n        >\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container pangEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your pang\"\n                            value={newPang}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4 style={isAuthor ? { color: \"#636e72\" } : {}}>\n                        {pangObj.text}\n                    </h4>\n                    {pangObj.attachmentURL && (\n                        <img src={pangObj.attachmentURL} alt=\"pang img\" />\n                    )}\n                    {isAuthor && (\n                        <div className=\"pang__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Pang;\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PangFactory = ({ userObj }) => {\n    const [pang, setPang] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (pang === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentURL = \"\";\n        if (attachment) {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentURL = await response.ref.getDownloadURL();\n        }\n        const pangObj = {\n            text: pang,\n            createdAt: Date.now(),\n            author: userObj.uid,\n            attachmentURL,\n        };\n        await dbService.collection(\"pangs\").add(pangObj);\n        setPang(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setPang(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                target: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearClick = () => setAttachment(\"\");\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"factoryForm\">\n                <div className=\"factoryInput__container\">\n                    <input\n                        value={pang}\n                        onChange={onChange}\n                        type=\"text\"\n                        placeholder=\"What's on your mind?\"\n                        maxLength={120}\n                        className=\"factoryInput__input\"\n                    />\n                    <input\n                        type=\"submit\"\n                        value=\"&rarr;\"\n                        className=\"factoryInput__arrow\"\n                    />\n                </div>\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                    <span>Add photos</span>\n                    <FontAwesomeIcon icon={faPlus} />\n                </label>\n                <input\n                    id=\"attach-file\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onFileChange}\n                    className=\"factoryInput__input__image\"\n                />\n                {attachment && (\n                    <div className=\"factoryForm__attachment\">\n                        <img\n                            src={attachment}\n                            alt=\"profile\"\n                            style={{ backgroundImage: attachment }}\n                        />\n                        <button\n                            onClick={onClearClick}\n                            className=\"factoryForm__clear\"\n                        >\n                            <span>Remove</span>\n                            <FontAwesomeIcon icon={faTimes} />\n                        </button>\n                    </div>\n                )}\n            </form>\n        </>\n    );\n};\n\nexport default PangFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"../fbase\";\n\nimport Pang from \"../components/Pang\";\nimport PangFactory from \"../components/PangFactory\";\n\nconst Home = ({ userObj }) => {\n    const [pangs, setPangs] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"pangs\").onSnapshot((snapshot) => {\n            const pangArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setPangs(pangArray.sort((a, b) => a.createdAt < b.createdAt));\n        });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <PangFactory userObj={userObj} />\n            <div className=\"home__pangs\">\n                {pangs.map((pang) => (\n                    <Pang\n                        key={pang.id}\n                        pangObj={pang}\n                        isAuthor={pang.author === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul className=\"nav-ul\">\n                <li>\n                    <Link to=\"/\" className=\"linkHome\">\n                        <FontAwesomeIcon\n                            icon={faTwitter}\n                            color={\"#04AAFF\"}\n                            size=\"2x\"\n                        />\n                    </Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\" className=\"linkProfile\">\n                        <FontAwesomeIcon\n                            icon={faUser}\n                            color={\"#04AAFF\"}\n                            size=\"2x\"\n                        />\n                        <span className=\"linkProfileWord\">\n                            {userObj.displayName\n                                ? `${userObj.displayName}'s Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"../fbase\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyPangs = async () => {\n        const myPangs = await dbService\n            .collection(\"pangs\")\n            .where(\"author\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .get();\n        return myPangs;\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    };\n\n    useEffect(() => {\n        getMyPangs();\n    });\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    autoFocus\n                    placeholder=\"Display Name\"\n                    value={newDisplayName}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                />\n            </form>\n            <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <div className=\"router__container\">\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                />\n            ) : (\n                \"Loading...\"\n            )}\n            <footer>&copy; {new Date().getFullYear()} Pang!</footer>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style/base.css\";\nimport \"./style/auth.css\";\nimport \"./style/authForm.css\";\nimport \"./style/socialAuthForm.css\";\nimport \"./style/factory.css\";\nimport \"./style/home.css\";\nimport \"./style/nav.css\";\nimport \"./style/profile.css\";\nimport \"./style/router.css\";\nimport \"./style/pang.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}